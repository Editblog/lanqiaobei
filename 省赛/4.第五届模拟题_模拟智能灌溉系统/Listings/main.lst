C51 COMPILER V9.60.0.0   MAIN                                                              04/09/2021 15:30:39 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\driver) DEBUG OBJECTEXTEND PRIN
                    -T(.\Listings\main.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <stc15f2k60s2.h>
   2          #include "ds1302.h"
   3          #include "iic.h"
   4          #define u8 unsigned char
   5          #define u16 unsigned int
   6          sbit relay=P0^4;
   7          sbit buzzer=P0^6;
   8                  
   9          u8 code du[]={0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x07,0x7F,0x6F};
  10          u8 code wei[]={0x01,0x02,0x04,0x08,0x10,0x20,0x40,0x80};
  11          
  12          void All_Init(void)
  13          {
  14   1              //LED
  15   1          P2 &= 0X1F;   //¹Ø573
  16   1              P0 =  0XFF;   //Ô¤ËÍÊý¾Ý
  17   1              P2 |= 0X80;   //¿ªÏàÓ¦573
  18   1              P0 =  0XFF;   //ËÍÊý¾Ý
  19   1              P2 &= 0X1F;   //¹Ø573
  20   1              
  21   1              //·äÃùÆ÷
  22   1          P2 &= 0X1F;   //¹Ø573
  23   1              P0 =  0X00;   //Ô¤ËÍÊý¾ÝÎÒ
  24   1              P2 |= 0XA0;   //¿ªÏàÓ¦573
  25   1              P0 =  0X00;   //ËÍÊý¾Ý
  26   1              P2 &= 0X1F;   //¹Ø573
  27   1              
  28   1              //ÊýÂë¹ÜÎ»Ñ¡
  29   1              P2 &= 0X1F;   //¹Ø573
  30   1              P0 =  0X00;   //Ô¤ËÍÊý¾Ý
  31   1              P2 |= 0XC0;   //¿ªÏàÓ¦573
  32   1              P0 =  0X00;   //ËÍÊý¾Ý
  33   1              P2 &= 0X1F;   //¹Ø573
  34   1              
  35   1              //ÊýÂë¹Ü¶ÎÑ¡
  36   1              P2 &= 0X1F;   //¹Ø573
  37   1              P0 =  0XFF;   //Ô¤ËÍÊý¾Ý
  38   1              P2 |= 0XE0;   //¿ªÏàÓ¦573
  39   1              P0 =  0XFF;   //ËÍÊý¾Ý
  40   1              P2 &= 0X1F;   //¹Ø573
  41   1      }
  42          
  43          void Timer0Init(void)           //1ºÁÃë@11.0592MHz
  44          {
  45   1              AUXR |= 0x80;           //¶¨Ê±Æ÷Ê±ÖÓ1TÄ£Ê½
  46   1              TMOD &= 0xF0;           //ÉèÖÃ¶¨Ê±Æ÷Ä£Ê½
  47   1              TL0 = 0xCD;             //ÉèÖÃ¶¨Ê±³õÖµ
  48   1              TH0 = 0xD4;             //ÉèÖÃ¶¨Ê±³õÖµ
  49   1              TF0 = 0;                //Çå³ýTF0±êÖ¾
  50   1              TR0 = 1;                //¶¨Ê±Æ÷0¿ªÊ¼¼ÆÊ±
  51   1              ET0=1;
  52   1              EA=1;
  53   1      }
  54          
C51 COMPILER V9.60.0.0   MAIN                                                              04/09/2021 15:30:39 PAGE 2   

  55          //---------------------------ËÄ¸ö¶ÀÁ¢°´¼ü--------------------------------
  56          #define btn_io P3
  57          #define btn_state_0 0     //ÊÇ·ñ°´ÏÂ
  58          #define btn_state_1 1    //ÊÇ·ñÊÇ¶¶¶¯
  59          #define btn_state_2 2     //ÅÐ¶¨°´¼üÓÐÐ§µÄÖÖÀà
  60          #define btn_state_3 3     //µÈ´ý°´¼üÊÍ·Å
  61          #define btn_mask 0x0f     //ÆÁ±Î²»ÐèÒªµÄIO
  62          #define LONG_KEY_TIME 100 //LONG_KEY_TIME*10MS = 3S
  63          #define SINGLE_KEY_TIME 3 //SINGLE_KEY_TIME*10MS = 30MS
  64          char btnkey;
  65          static char btn_state = 0;
  66          char scanbtn(void)
  67          {
  68   1              static int key_time; //°´¼ü¼ÆÊ±±äÁ¿     
  69   1              static char key_value=0;
  70   1              char btn_press,btn_return = 0;
  71   1              btn_press = btn_io & btn_mask;
  72   1              switch(btn_state)
  73   1              {
  74   2                      case btn_state_0:
  75   2                              key_value=0;
  76   2                              if(btn_press != btn_mask){
  77   3                                      key_time = 0; // ÇåÁãÊ±¼ä¼ä¸ô¼ÆÊý
  78   3                                      btn_state = btn_state_1;
  79   3                              }
  80   2                              break;
  81   2                      case btn_state_1:
  82   2                              if(btn_press != btn_mask)
  83   2                              {
  84   3                                      key_time++; // Ò»´Î10ms
  85   3                                      if (key_time >= SINGLE_KEY_TIME) // Ïû¶¶Ê±¼äÎª£ºSINGLE_KEY_TIME*10ms = 30ms;
  86   3                                      {
  87   4                                              btn_state = btn_state_2;
  88   4                                      }
  89   3                              }
  90   2                              else
  91   2                                      btn_state = btn_state_0;
  92   2                              break;
  93   2                      case btn_state_2:
  94   2                              if(btn_press == btn_mask)
  95   2                              {
  96   3                                      btn_return=key_value;
  97   3                                      key_value=0;
  98   3                                      btn_state = btn_state_0; // È¥×´Ì¬3£¬µÈ´ý°´¼üÊÍ·Å
  99   3                              }
 100   2                              else
 101   2                              {
 102   3                                      if(btn_press == 0x0e) key_value = 1;
 103   3                                      if(btn_press == 0x0d) key_value = 2;
 104   3                                      if(btn_press == 0x0b) key_value = 3;
 105   3                                      if(btn_press == 0x07) key_value = 4;
 106   3      
 107   3                                      key_time++;
 108   3      
 109   3                                      if (key_time >= LONG_KEY_TIME) // Èç¹û°´¼üÊ±¼ä³¬¹ý Éè¶¨µÄ³¤°´Ê±¼ä£¨LONG_KEY_TIME*10ms=200*10ms=2000ms£
             -©, ÔòÅÐ¶¨Îª ³¤°´
 110   3                                      {
 111   4                                              btn_return =key_value|0x80;
 112   4                                              key_value=0;
 113   4                                              btn_state = btn_state_3; // È¥×´Ì¬3£¬µÈ´ý°´¼üÊÍ·Å
 114   4                                      }
 115   3                              }
C51 COMPILER V9.60.0.0   MAIN                                                              04/09/2021 15:30:39 PAGE 3   

 116   2                              break;
 117   2                      case btn_state_3:
 118   2                              if(btn_press == 0x0f)   btn_state = btn_state_0;
 119   2                              break;
 120   2                      default:
 121   2                      break;
 122   2              }
 123   1              return  btn_return;
 124   1      }
 125          
 126          u8 time_display[8];
 127          u8 set_display[8]={0x40,0x40,0x00,0x00,0x00,0x00};
 128          u8 shi,fen,miao;
 129          u8 humidity=99;
 130          u8 mode;        //mode=0 ×Ô¶¯  mode=1 ÊÖ¶¯
 131          u8 humidity_th=50;
 132          bit buzzer_flag,relay_flag;
 133          bit buzzer_beep=1;      //ÈÃ·äÃùÆ÷Ïì»ò²»Ïì
 134          bit set_flag=0;
 135          void main()
 136          {
 137   1              All_Init();
 138   1              humidity_th=read_24c02(0x01);
 139   1              set_sfm(8,30,50);
 140   1              Timer0Init();
 141   1              while(1)
 142   1              {
 143   2                      EA=0;
 144   2                      miao=Read_Ds1302_Byte(0x81);
 145   2                      fen=Read_Ds1302_Byte(0x83);
 146   2                      shi=Read_Ds1302_Byte(0x85);
 147   2                      EA=1;
 148   2                      time_display[0]=du[shi/16];
 149   2                      time_display[1]=du[shi%16];
 150   2                      time_display[2]=0x40;
 151   2                      time_display[3]=du[fen/16];
 152   2                      time_display[4]=du[fen%16];
 153   2                      time_display[5]=0x00;
 154   2                      
 155   2                      EA=0;
 156   2                      humidity=(u8)(read_adc(0x03)/2.57f);
 157   2                      EA=1;
 158   2                      time_display[6]=du[humidity/10];
 159   2                      time_display[7]=du[humidity%10];
 160   2                      
 161   2                      set_display[6]=du[humidity_th/10];
 162   2                      set_display[7]=du[humidity_th%10];
 163   2                      
 164   2                      if(mode==1)             //ÊÖ¶¯
 165   2                      {
 166   3                              P0=~0x02;P2=(P2&0x1f)|0x80;P0=~0x02;P2&=0x1f;
 167   3                              if(humidity<humidity_th)
 168   3                              {
 169   4                                      if(buzzer_beep)
 170   4                                      {
 171   5                                              buzzer_flag=1;
 172   5                                      }
 173   4                                      else
 174   4                                      {
 175   5                                              buzzer_flag=0;
 176   5                                      }
 177   4                              }
C51 COMPILER V9.60.0.0   MAIN                                                              04/09/2021 15:30:39 PAGE 4   

 178   3                              else
 179   3                              {
 180   4                                      buzzer_flag=0;
 181   4                              }
 182   3                      }
 183   2                      else                    //×Ô¶¯
 184   2                      {
 185   3                              P0=~0x01;P2=(P2&0x1f)|0x80;P0=~0x01;P2&=0x1f;
 186   3                              buzzer_flag=0;
 187   3                              if(humidity<humidity_th)
 188   3                              {
 189   4                                      relay_flag=1;
 190   4                              }
 191   3                              else
 192   3                              {
 193   4                                      relay_flag=0;
 194   4                              }
 195   3                      }
 196   2                      
 197   2                      switch(btnkey)
 198   2                      {
 199   3                              case 1:                         //S7
 200   3                                      mode++;
 201   3                                      if(mode==2)
 202   3                                      {
 203   4                                              mode=0;
 204   4                                      }
 205   3                                      btnkey=0;
 206   3                                      break;
 207   3                              case 2:                         //S6
 208   3                                      if(mode==1)
 209   3                                      {
 210   4                                              buzzer_beep=~buzzer_beep;
 211   4                                      }
 212   3                                      else
 213   3                                      {
 214   4                                              set_flag=~set_flag;
 215   4                                              if(set_flag==0)
 216   4                                              {
 217   5                                                      write_24c02(0x01,humidity_th);
 218   5                                              }
 219   4                                      }
 220   3                                      
 221   3                                      btnkey=0;
 222   3                                      break;
 223   3                              case 3:                         //S5
 224   3                                      if(mode==1)
 225   3                                      {
 226   4                                              relay_flag=1;
 227   4                                      }
 228   3                                      else
 229   3                                      {
 230   4                                              if(set_flag)
 231   4                                              {
 232   5                                                      humidity_th++;
 233   5                                              }
 234   4                                      }
 235   3                                      btnkey=0;
 236   3                                      break;
 237   3                              case 4:                         //S4
 238   3                                      if(mode==1)
 239   3                                      {
C51 COMPILER V9.60.0.0   MAIN                                                              04/09/2021 15:30:39 PAGE 5   

 240   4                                              relay_flag=0;
 241   4                                      }
 242   3                                      else
 243   3                                      {
 244   4                                              if(set_flag)
 245   4                                              {
 246   5                                                      humidity_th--;
 247   5                                              }
 248   4                                      }
 249   3                                      btnkey=0;
 250   3                                      break;
 251   3                              default:
 252   3                              break;
 253   3                      }
 254   2                      if(relay_flag==0 && buzzer_flag==0)
 255   2                      {
 256   3                              relay=0;buzzer=0;P2=(P2&0x1f)|0xa0;relay=0;buzzer=0;P2&=0x1f;
 257   3                      }
 258   2                      if(relay_flag==1 && buzzer_flag==0)
 259   2                      {
 260   3                              relay=1;buzzer=0;P2=(P2&0x1f)|0xa0;relay=1;buzzer=0;P2&=0x1f;
 261   3                      }
 262   2                      if(relay_flag==0 && buzzer_flag==1)
 263   2                      {
 264   3                              relay=0;buzzer=1;P2=(P2&0x1f)|0xa0;relay=0;buzzer=1;P2&=0x1f;
 265   3                      }
 266   2                      if(relay_flag==1 && buzzer_flag==1)
 267   2                      {
 268   3                              relay=1;buzzer=1;P2=(P2&0x1f)|0xa0;relay=1;buzzer=1;P2&=0x1f;
 269   3                      }
 270   2              }
 271   1      }
 272          
 273          void time0() interrupt 1
 274          {
 275   1              static int smg_count=0,key_count=0,i=0;
 276   1              smg_count++; key_count++;
 277   1              if(key_count==8)
 278   1              {
 279   2                      btnkey=scanbtn();
 280   2                      key_count=0;
 281   2              }
 282   1              
 283   1              if(smg_count==1)
 284   1              {
 285   2                      smg_count=0;
 286   2                      P2=(P2&0x1f)|0xc0;P0=0x00;P2&=0x1f;
 287   2                      if(set_flag)
 288   2                      {
 289   3                              P2=(P2&0x1f)|0xe0;P0=~set_display[i];P2&=0x1f;
 290   3                      }
 291   2                      else
 292   2                      {
 293   3                              P2=(P2&0x1f)|0xe0;P0=~time_display[i];P2&=0x1f;
 294   3                      }
 295   2                      
 296   2                      P2=(P2&0x1f)|0xc0;P0=wei[i];P2&=0x1f;
 297   2                      i++;
 298   2                      if(i==8) i=0;
 299   2              }
 300   1      }

C51 COMPILER V9.60.0.0   MAIN                                                              04/09/2021 15:30:39 PAGE 6   


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    883    ----
   CONSTANT SIZE    =     18    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     33    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      4    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
